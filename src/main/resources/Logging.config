<?xml version="1.0" encoding="utf-8"?>
<configuration>
    <appSettings>
        <!--为根 Logger 定义日志级别。-->
        <add key="Root.Level" value="Info" />
        <!--为根 Logger 添加日志 Handler。它们必须是具有默认构造方法的 Handler 类。注意，非基础类型的值都必须使用类型的完全限定名。-->
        <add key="Root.Handlers" value="Shinater.Logging.ConsoleHandler" />
        <!--为名称为 "Foo" 的 Logger 定义日志级别。-->
        <add key="Foo.Level" value="Warning" />
        <!--指示名称为 "Foo" 的 Logger 是否继承其父的日志级别。-->
        <add key="Foo.UseParentLevel" value="false" />
        <!--为名称为 "Foo" 的 Logger 添加多个日志 Handler。它们必须是以逗号或空格分隔的。-->
        <add key="Foo.Handlers" value="Shinater.Logging.ConsoleHandler,Shinater.Logging.FileHandler" />
        <!--指示名称为 "Foo" 的 Logger 是否应该将其输出发送到它的父 Logger。-->
        <add key="Foo.UseParentHandlers" value="false" />
        <!--为名称为 "Foo" 的 Logger 定义过滤器。注意，引用到外部类型时，可以在它的完全限定名前加上放入括号 "()" 中的程序集名称。-->
        <add key="Foo.Filter" value="(XAssembly)XNamespace.XFilter" />
        <!--为 Handler 定义默认属性：--><!--为控制台 Handler 定义日志级别、格式化处理程序。-->
        <add key="Shinater.Logging.ConsoleHandler.Level" value="All" />
        <add key="Shinater.Logging.ConsoleHandler.Formatter" value="Shinater.Logging.SimpleFormatter" />
        <!--为文件 Handler 定义文件名模式、字符编码。-->
        <add key="Shinater.Logging.FileHandler.Pattern" value="%d.log" />
        <add key="Shinater.Logging.FileHandler.Encoding" value="UTF-8" />
        <!--为网络 Handler 定义目标主机、端口、网络协议。-->
        <add key="Shinater.Logging.SocketHandler.Host" value="192.168.1.xx" />
        <add key="Shinater.Logging.SocketHandler.Port" value="4080" />
        <add key="Shinater.Logging.SocketHandler.ProtocolType" value="Tcp" />
        <add key="DEBUG.MONGO" value="false" />
        <add key="DB.TRACE" value="false" />
    </appSettings>
</configuration>