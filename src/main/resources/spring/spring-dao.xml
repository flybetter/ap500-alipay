<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
        ">

	<context:property-placeholder location="classpath:alipay.properties" />

	 <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">  
        <property name="url" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.user}" />  
        <property name="password" value="${jdbc.password}" />  
 		<property name="connectionProperties" value="${jdbc.driver}"/>
        <property name="maxActive" value="20" />  
        <property name="initialSize" value="1" />  
        <property name="maxWait" value="60000" />  
        <property name="minIdle" value="1" />  
        <property name="timeBetweenEvictionRunsMillis" value="3000" />  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
        <property name="validationQuery" value="SELECT 'x' FROM DUAL" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="filters" value="stat" />  
    </bean>  

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="typeAliasesPackage" value="org.alipay.entity" />
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="org.alipay.dao" />
	</bean>

	<mongo:mongo-client id="mongo" host="${mongo.hostport}" credentials="${mongo.username}:${mongo.password}@ap500">
		<mongo:client-options min-connections-per-host="2"
			connections-per-host="100" connect-timeout="5000" max-wait-time="120000"
			heartbeat-frequency="2000" heartbeat-connect-timeout="10000"
			max-connection-life-time="3000" socket-keep-alive="true"
			socket-timeout="3000"
			threads-allowed-to-block-for-connection-multiplier="5" write-concern="SAFE" />
	</mongo:mongo-client>
	
	<mongo:db-factory id="mongoDbFactory" mongo-ref="mongo"
		dbname="ap500" />
		
	<bean id="mappingContext"
		class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />
		 
	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />
		<property name="writeResultChecking" value="EXCEPTION" />
	</bean>

	<bean id="mongodbDao" class="org.alipay.dao.cache.MongodbDao">
		<constructor-arg name="mongoTemplate" ref="mongoTemplate" />
	</bean>
	
	<bean id="redisDao" class="org.alipay.dao.cache.RedisDao" >
		<constructor-arg index="0" value="${redis.host}" />
	</bean>
	

</beans>        